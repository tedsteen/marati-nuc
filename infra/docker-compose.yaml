services:
  traefik:
    image: 'traefik:latest'
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - '--api.insecure=true'

      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'

      - '--entrypoints.web.address=:80'
    environment:
      TZ: Europe/Tallinn
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_traefik.rule=Host(`traefik.marati.s3n.io`)'
      - 'traefik.http.routers.infra_traefik.entrypoints=web'
      - 'traefik.http.services.infra_traefik.loadbalancer.server.port=8080'
      - 'traefik.docker.network=infra_traefik'
    ports:
      - '80:80'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - traefik

  traefik-pub:
    image: 'traefik:latest'
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - '--api.insecure=true'

      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'

      - '--entrypoints.web.address=:80'
    environment:
      TZ: Europe/Tallinn
    ports:
      - '8080:80'
      - '8081:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - traefik-pub

  portainer:
    image: portainer/portainer-ce:alpine
    restart: unless-stopped
    privileged: true
    volumes:
      - ${CONFIG_PATH}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_portainer.rule=Host(`portainer.marati.s3n.io`)'
      - 'traefik.http.routers.infra_portainer.entrypoints=web'
      - 'traefik.http.services.infra_portainer.loadbalancer.server.port=9000'
      - 'traefik.docker.network=infra_traefik'
    environment:
      TZ: Europe/Tallinn
    networks:
      - traefik

  samba:
    image: dperson/samba
    pull_policy: always
    command: -n -r -s "Everything;/mount;yes;no;yes;;;;"
    restart: unless-stopped
    ports:
      - "139:139"
      - "445:445"
    volumes:
      - ${STUFF_PATH}:/mount/stuff
      - ${FAST_PATH}:/mount/fast
    environment:
      GROUPID: 1001
      USERID: 1001
      TZ: Europe/Tallinn
    tmpfs:
      - /tmp

  influxdb:
    image: influxdb:alpine
    restart: unless-stopped
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 2s
      timeout: 10s
      retries: 10
    environment:
      TZ: Europe/Lisbon
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb-admin-token
      DOCKER_INFLUXDB_INIT_ORG: hal 
      DOCKER_INFLUXDB_INIT_BUCKET: everything
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_influxdb.rule=Host(`influxdb.marati.s3n.io`)'
      - 'traefik.http.routers.infra_influxdb.entrypoints=web'
      - 'traefik.http.services.infra_influxdb.loadbalancer.server.port=8086'
      - 'traefik.docker.network=infra_traefik'
    networks:
      - metrics
      - traefik
    secrets:
      - influxdb-admin-username
      - influxdb-admin-password
      - influxdb-admin-token
    volumes:
      - ${CONFIG_PATH}/influxdb/data:/var/lib/influxdb2
      - ${CONFIG_PATH}/influxdb/config:/etc/influxdb2

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_grafana.rule=Host(`grafana.marati.s3n.io`)'
      - 'traefik.http.routers.infra_grafana.entrypoints=web'
      - 'traefik.http.services.infra_grafana.loadbalancer.server.port=3000'
      - 'traefik.docker.network=infra_traefik'
    networks:
      - metrics
      - traefik
    volumes:
      - ${CONFIG_PATH}/grafana:/var/lib/grafana

  telegraf:
    build: ./telegraf
    restart: unless-stopped
    environment:
      TZ: Europe/Tallinn
      HOST_MOUNT_PREFIX: /hostfs
      HOST_PROC: /hostfs/proc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/hostfs:ro
    networks:
      - metrics
    secrets:
      - influxdb-admin-token

  backup:
    build: ./backup
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${FAST_PATH}/config:/config:ro
      - ${CONFIG_PATH}/backup:/root

networks:
  metrics:
    driver: bridge
  traefik:
    driver: bridge
  traefik-pub:
    driver: bridge

secrets:
  influxdb-admin-username:
    file: ${CONFIG_PATH}/influxdb/secrets/.env.influxdb-admin-username
  influxdb-admin-password:
    file: ${CONFIG_PATH}/influxdb/secrets/.env.influxdb-admin-password
  influxdb-admin-token:
    file: ${CONFIG_PATH}/influxdb/secrets/.env.influxdb-admin-token
